
-- Create database library
CREATE DATABASE library;

-- Use database library
USE library;

-- Create table Branch
CREATE TABLE Branch (
    Branch_no INT PRIMARY KEY,
    Manager_Id INT,
    Branch_address VARCHAR(255),
    Contact_no VARCHAR(15)
);

-- Create table Employee
CREATE TABLE Employee (
    Emp_Id INT PRIMARY KEY,
    Emp_name VARCHAR(100),
    Position VARCHAR(50),
    Salary DECIMAL(10, 2),
    Branch_no INT,
    FOREIGN KEY (Branch_no) REFERENCES Branch(Branch_no)
);

-- Create table Books
CREATE TABLE Books (
    ISBN VARCHAR(20) PRIMARY KEY,
    Book_title VARCHAR(100),
    Category VARCHAR(50),
    Rental_Price DECIMAL(10, 2),
    Status VARCHAR(5),
    Author VARCHAR(100),
    Publisher VARCHAR(100)
);

-- Create table Customer
CREATE TABLE Customer (
    Customer_Id INT PRIMARY KEY,
    Customer_name VARCHAR(100),
    Customer_address VARCHAR(255),
    Reg_date DATE
);

-- Create table IssueStatus
CREATE TABLE IssueStatus (
    Issue_Id INT PRIMARY KEY,
    Issued_cust INT,
    Issued_book_name VARCHAR(100),
    Issue_date DATE,
    Isbn_book VARCHAR(20),
    FOREIGN KEY (Issued_cust) REFERENCES Customer(Customer_Id),
    FOREIGN KEY (Isbn_book) REFERENCES Books(ISBN)
);

-- Create table ReturnStatus
CREATE TABLE ReturnStatus (
    Return_Id INT PRIMARY KEY,
    Return_cust INT,
    Return_book_name VARCHAR(100),
    Return_date DATE,
    Isbn_book2 VARCHAR(20),
    FOREIGN KEY (Isbn_book2) REFERENCES Books(ISBN)
);


Here are the queries:

1. Retrieve available books:


SELECT Book_title, Category, Rental_Price 
FROM Books 
WHERE Status = 'yes';


1. List employee names and salaries:


SELECT Emp_name, Salary 
FROM Employee 
ORDER BY Salary DESC;


1. Retrieve book titles and corresponding customers:


SELECT B.Book_title, C.Customer_name 
FROM Books B 
JOIN IssueStatus I ON B.ISBN = I.Isbn_book 
JOIN Customer C ON I.Issued_cust = C.Customer_Id;


1. Display total count of books in each category:


SELECT Category, COUNT(*) AS Total_Books 
FROM Books 
GROUP BY Category;


1. Retrieve employee names and positions:


SELECT Emp_name, Position 
FROM Employee 
WHERE Salary > 50000;


1. List customer names who registered before 2022-01-01:


SELECT Customer_name 
FROM Customer 
WHERE Reg_date < '2022-01-01' 
AND Customer_Id NOT IN (SELECT Issued_cust FROM IssueStatus);


1. Display branch numbers and total count of employees:


SELECT B.Branch_no, COUNT(*) AS Total_Employees 
FROM Branch B 
JOIN Employee E ON B.Branch_no = E.Branch_no 
GROUP BY B.Branch_no;


1. Display names of customers who issued books in June 2023:


SELECT C.Customer_name 
FROM Customer C 
JOIN IssueStatus I ON C.Customer_Id = I.Issued_cust 
WHERE MONTH(Issue_date) = 6 AND YEAR(Issue_date) = 2023;


1. Retrieve book titles containing history:


SELECT Book_title 
FROM Books 
WHERE Category = 'History';


1. Retrieve branch numbers with count of employees:


SELECT B.Branch_no, COUNT(*) AS Total_Employees 
FROM Branch B 
JOIN Employee E ON B.Branch_no = E.Branch_no 
GROUP BY B.Branch_no 
HAVING COUNT(*) > 5;


1. Retrieve names of employees who manage branches:


SELECT E.Emp_name, B.Branch_address 
FROM Employee E 
JOIN Branch B ON E.Emp_Id = B.Manager_Id;


1. Display names of customers who issued books with rental price higher than Rs. 25:


SELECT C.Customer_name 
FROM Customer C 
JOIN IssueStatus I ON C.Customer_Id = I.Issued_cust 
JOIN Books B ON I.Isbn_book = B.ISBN 
WHERE B.Rental_Price > 25;
